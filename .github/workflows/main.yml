name: CI & CD Pipeline
on:
  push:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      build_image:
        description: 'Build & push Docker image?'
        type: boolean
        default: true
      operation:
        description: 'Deploy action to perform'
        type: choice
        options:
          - install
          - uninstall
          - reinstall
        default: reinstall

env:
  IMAGE_NAME: discord-bot

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      
      - name: Run tests
        run: |
          python -m unittest discover -v tests
      
      - name: Run Black
        run: |
          pip install --check black
          black .

  build:
    name: Build & Push Docker Image
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.build_image == 'true')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Compute lowercase owner
        run: |
          echo "OWNER_LC=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    name: ðŸš€ Deploy to Cloud VM
    needs: [test]
    runs-on: ubuntu-latest
    if: always() && needs.test.result == 'success'
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          port: ${{ secrets.VM_SSH_PORT }}
          script: |
            cd /opt/discord-bot
            git pull
            docker compose pull
            # Use default operation 'reinstall' for push events
            operation="${{ github.event.inputs.operation || 'reinstall' }}"
            case "$operation" in
              install)   docker compose up -d ;;
              uninstall) docker compose down ;;
              reinstall) docker compose down && docker compose up -d ;;
            esac
